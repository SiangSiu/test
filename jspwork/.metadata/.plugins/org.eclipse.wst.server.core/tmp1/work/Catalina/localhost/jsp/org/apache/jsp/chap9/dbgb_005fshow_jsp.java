/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.35
 * Generated at: 2016-06-15 08:55:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.chap9;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.util.*;

public final class dbgb_005fshow_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=EUC-KR\">\r\n");
      out.write("<link href=\"filegb.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<center>\r\n");


Vector name=new Vector();
Vector email=new Vector();
Vector inputdate=new Vector();
Vector subject=new Vector();
Vector content=new Vector();


int where=1;
int totalgroup = 0;
int maxpages=2;
int startpage=1;
int endpage=startpage+maxpages-1;
int wheregroup=1;
if(request.getParameter("go") != null){
		where = Integer.parseInt(request.getParameter("go"));
		wheregroup = (where-1)/maxpages +1;
		startpage = (wheregroup-1)*maxpages+1;
		endpage = startpage+maxpages-1;
} else if(request.getParameter("gogroup") != null) {
	wheregroup = Integer.parseInt(request.getParameter("gogroup"));
	startpage=(wheregroup-1) * maxpages+1;
	where =startpage;
	endpage=startpage+maxpages-1;
}
int nextgroup = wheregroup+1;
int priorgroup = wheregroup-1;
int nextpage=where+1;
int priorpage = where-1;
int startrow=0;
int endrow=0;
int maxrows=2;
int totalrows=0;
int totalpages=0;




String em=null;
Connection con=null;
Statement st = null;
ResultSet rs = null;

try {
	Class.forName("org.gjt.mm.mysql.Driver");
}catch (ClassNotFoundException e){
	out.println(e.getMessage());
}

try {
	con = DriverManager.getConnection("jdbc:mysql://localhost:3306/gboard?useUnicode=true&characterEncoding=euckr", "root", "apmsetup");
	st=con.createStatement();
	rs = st.executeQuery("select * from guestboard order by inputdate desc");
	
	if(!(rs.next())) {
		out.println("블로그에 올린 글이 없습니다.");
	} else {
		do{
			name.addElement(rs.getString("name"));
			email.addElement(rs.getString("email"));
			inputdate.addElement(rs.getString("inputdate"));
			subject.addElement(rs.getString("subject"));
			content.addElement(rs.getString("content"));
		}while(rs.next());
		totalrows = name.size();
		totalpages = (totalrows-1)/maxrows+1;
		startrow=(where-1)*maxrows;
		endrow=startrow+maxrows-1;
		if(endrow >= totalrows)
			endrow=totalrows-1;
		totalgroup = (totalpages-1)/maxpages +1;
		if(endpage > totalpages)
			endpage=totalpages;
		
		for(int j=startrow; j<=endrow; j++){

      out.write("\r\n");
      out.write("\t<table border='0' width='600' cellspacing='0' cellpadding='2'>\r\n");
      out.write("\t\t<tr align='right'>\r\n");
      out.write("\t\t\t<td height='22'>&nbsp;</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr align='center'>\r\n");
      out.write("\t\t\t<td height='1' bgcolor='#1F4F8F'></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr align='center' bgcolor='#DFEDFF'>\r\n");
      out.write("\t\t\t<td class='button' bgcolor='#DFEDFF'>\r\n");
      out.write("\t\t\t<div align='left'><font size='2'>");
      out.print(subject.elementAt(j) );
      out.write("</font>\r\n");
      out.write("\t\t\t</div></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr align='center' bgcolor='#FFFFFF'>\r\n");
      out.write("\t\t\t<td align='center' bgcolor='#F4F4F4'>\r\n");
      out.write("\t\t\t<table width='100%' border='0' cellpadding='0' cellspacing='4'>\r\n");
      out.write("\t\t\t\t<tr bgcolor='#F4F4F4'>\r\n");
      out.write("\t\t\t\t\t<td width='13%' height='7'></td>\r\n");
      out.write("\t\t\t\t\t<td width='38%' height='7'>글쓴이:");
      out.print(name.elementAt(j) );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t");

					String temp= (String)email.elementAt(j);
					if((temp != null) && (!(temp.equals(""))))
							em = "<a href=mailto:" + temp + ">" + temp + "</a>";
					
      out.write("\r\n");
      out.write("\t\t\t\t\t<td width='38%' height='7'>E-mail: ");
      out.print(em );
      out.write(" </td>\r\n");
      out.write("\t\t\t\t\t<td width='11%' height='7'></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr bgcolor='#F4F4F4'>\r\n");
      out.write("\t\t\t\t\t<td width='13%'></td>\r\n");
      out.write("\t\t\t\t\t<td colspan=2>작성일: ");
      out.print(inputdate.elementAt(j) );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td width='11%'></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr align='center'>\r\n");
      out.write("\t<td bgcolor='#1F4F8F' height='1'></td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr align='center'>\r\n");
      out.write("\t<td style='padding:10 0 0 0'>\r\n");
      out.write("\t\t<div align='left'><br>\r\n");
      out.write("\t\t\t<font size='3' color='#333333'><pre>");
      out.print(content.elementAt(j) );
      out.write("</pre></font>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr align='center'>\r\n");
      out.write("\t<td class='button' height='1'></td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr align='center'>\r\n");
      out.write("\t<td bgcolor='#1F4F8F' height='1'></td>\r\n");
      out.write("</tr>\r\n");
      out.write("</table><p>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");

		}
	}
	rs.close();
	st.close();
	con.close();
} catch (SQLException e) {
	out.println(e);
}
if(wheregroup > 1) {
	out.println("[<a href=\"dbgb_show.jsp?go=1\">처음</a>]");
	out.println("[<a href=\"dbgb_show.jsp?gogroup="+priorgroup+"\">이전</a>]");
} else {
	out.println("[처음]");
	out.println("[이전]");
}
for(int jj=startpage; jj<=endpage; jj++){
	if(jj==where)
		out.println("["+jj+"]");
	else
		out.println("[<a href=\"dbgb_show.jsp?go="+jj+"\">"+ jj +"</a>]");
}

if(wheregroup < totalgroup) {
	out.println("[<a href=\"dbgb_show.jsp?gogroup="+nextgroup+"\">다음</a>]");
	out.println("[<a href=\"dbgb_show.jsp?gogroup="+totalgroup+"\">마지막</a>]");
} else {
	out.println("[다음]");
	out.println("[마지막]");
}

out.println(where+"/"+totalpages);


      out.write("\r\n");
      out.write("<p>\r\n");
      out.write("<a href=\"dbgb_write.html\">\r\n");
      out.write("<img src=\"image/write.gif\" width=\"54\" height=\"19\" border=0></a>\r\n");
      out.write("\r\n");
      out.write("</center>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
