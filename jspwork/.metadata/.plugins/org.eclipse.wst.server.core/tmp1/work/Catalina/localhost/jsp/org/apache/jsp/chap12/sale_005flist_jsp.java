/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.35
 * Generated at: 2016-07-05 08:42:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.chap12;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.text.*;

public final class sale_005flist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.text");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
 request.setCharacterEncoding("euc-kr"); 
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=EUC-KR\">\r\n");
      out.write("<title>쇼핑 목록</title>\r\n");
      out.write("<script language=\"javascript\">\r\n");
      out.write("\tfunction setvalue(f) {\r\n");
      out.write("\t\tf.quantity.value=0;\r\n");
      out.write("\t\tf.submit();\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<p align=center>\r\n");
      out.write("\t<font  color=#0000ff face=굴림 size=+1>\r\n");
      out.write("\t\t<strong> 쇼핑 목록 </strong>\r\n");
      out.write("\t</font>\r\n");
      out.write("</p>\r\n");
      out.write("<center>\r\n");
      out.write("<table border=0 width=600 cellpadding=4 cellspacing=4 style=\"font-size:10pt\">\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<th width=5% bgcolor=#003399>\r\n");
      out.write("\t\t\t<font color=white face=굴림><nobr>번호</nobr></font>\r\n");
      out.write("\t\t</th>\r\n");
      out.write("\t\t<th width=20% bgcolor=#003399>\r\n");
      out.write("\t\t\t<font color=white face=굴림><nobr>상품명</nobr></font>\r\n");
      out.write("\t\t</th>\r\n");
      out.write("\t\t<th width=20% bgcolor=#003399>\r\n");
      out.write("\t\t\t<font color=white face=굴림><nobr>제조원</nobr></font>\r\n");
      out.write("\t\t</th>\r\n");
      out.write("\t\t<th width=25% bgcolor=#003399>\r\n");
      out.write("\t\t\t<font color=white face=굴림><nobr>주문 수량</nobr></font>\r\n");
      out.write("\t\t</th>\r\n");
      out.write("\t\t<th width=10% bgcolor=#003399>\r\n");
      out.write("\t\t\t<font color=white face=굴림><nobr>판매가(원)</nobr></font>\r\n");
      out.write("\t\t</th>\r\n");
      out.write("\t\t<th width=15% bgcolor=#003399>\r\n");
      out.write("\t\t\t<font color=white face=굴림><nobr>합계(수량*판매가)</nobr></font>\r\n");
      out.write("\t\t</th>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t");

	long id =0;
	
	session = request.getSession();
	
	String[] a= session.getValueNames();
	
	String where="1";
	
	String ca="";
	String pn="";
	
	int qty=0;
	int count=0;
	
	
	if(request.getParameter("go") != null)
		if( !(request.getParameter("go").equals("")))
			ca=request.getParameter("go");
	
	if(request.getParameter("cat") != null)
		if( !(request.getParameter("cat").equals("")))
			ca=request.getParameter("cat");

	if(request.getParameter("pname") != null) 
		if(!(request.getParameter("pname").equals("")))
			pn=request.getParameter("pname");
	
	NumberFormat nf = NumberFormat.getInstance();
	
	String pricestr="";
	String hap="";
	int price=0;
	long total=0;
	
	Connection con =null;
	Statement st=null;
	ResultSet rs = null;
	String sql = null;
	
	
	try {
		Class.forName("org.gjt.mm.mysql.Driver");
//		Class.forName("oracle.jdbc.driver.OracleDriver");
		
	}catch(ClassNotFoundException e){
		out.println(e.getMessage());
	}

	try {
		con = DriverManager.getConnection("jdbc:mysql://localhost:3306/shop?useUnicode=true&characterEncoding=euckr","root","apmsetup");
		//con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe", "hr", "1234");
	} catch(SQLException e) {
		out.println(e);
	}
	
	try {
		st = con.createStatement();
		
		for(int i=0; i< a.length; i++) {
			id=Long.parseLong(a[i].trim());
			qty = ((Integer)session.getValue(a[i])).intValue();
			sql = "select * from product where id="+id;
			rs = st.executeQuery(sql);
			
			if(rs.next()) {
				count = count=1;
				price=rs.getInt("downprice");
				pricestr=nf.format(price);
				hap=nf.format(price*qty);
				total=total+(price*qty);
				
      out.write("\r\n");
      out.write("\t\t\t\t<form method=post action=\"sale_upd.jsp\">\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th width=5% bgcolor=#eeeeee>");
      out.print((i+1) );
      out.write("</th>\r\n");
      out.write("\t\t\t\t\t\t<td width=20% bgcolor=#eeeeee>");
      out.print(rs.getString("pname") );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<td width=15% bgcolor=#eeeeee>");
      out.print(rs.getString("sname") );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<td width=30% bgcolor=#eeeeee>\r\n");
      out.write("\t\t\t\t\t\t\t<input type=text name=quantity size=2 value=");
      out.print(qty );
      out.write(">개<br/>\r\n");
      out.write("\t\t\t\t\t\t\t<input type=hidden name=id value=");
      out.print(id );
      out.write(">\r\n");
      out.write("\t\t\t\t\t\t\t<input type=hidden name=go value=");
      out.print(where );
      out.write(">\r\n");
      out.write("\t\t\t\t\t\t\t<input type=hidden name=cat value=");
      out.print(ca );
      out.write(">\r\n");
      out.write("\t\t\t\t\t\t\t<input type=hidden name=pname value=");
      out.print(pn );
      out.write(">\r\n");
      out.write("\t\t\t\t\t\t\t<input type=submit value=\"수정\">\r\n");
      out.write("\t\t\t\t\t\t\t<input type=button value=\"삭제\" onClick=\"setvalue(this.form);\">\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t<td width=10% bgcolor=#eeeeee align=right>");
      out.print(pricestr );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<td width=10% bgcolor=#eeeeee align=right>");
      out.print(hap );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t");

			}
		}
		
      out.write("\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td width=10% align=right colspan=6>\r\n");
      out.write("\t\t\t\t주문 상품 : ");
      out.print(count );
      out.write(" 품목&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t주문 총 합게 금액 : ");
      out.print(nf.format(total) );
      out.write(" 원\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\t");

		st.close();
		con.close();
		
		
      out.write("\r\n");
      out.write("\t\t[<a href=\"shop_list.jsp?go=\"");
      out.print(where );
      out.write("&cat=");
      out.print(ca );
      out.write("&pname=");
      out.print(pn );
      out.write(">계속 쇼핑하기</a>]\r\n");
      out.write("\t\t[<a href=\"order.jsp?total=\"");
      out.print(total );
      out.write("&count=");
      out.print(count );
      out.write(">주문하기</a>]\r\n");
      out.write("\t\t");

		} catch(SQLException e) {
			out.println(e);
		
		}
	
	
      out.write("\r\n");
      out.write("</center>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
