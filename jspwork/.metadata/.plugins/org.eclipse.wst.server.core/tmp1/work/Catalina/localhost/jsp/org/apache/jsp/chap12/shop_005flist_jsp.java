/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.35
 * Generated at: 2016-07-05 06:56:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.chap12;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.util.*;
import java.text.*;

public final class shop_005flist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("java.text");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
 request.setCharacterEncoding("euc-kr"); 
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=EUC-KR\">\r\n");
      out.write("<title>쇼핑하기</title>\r\n");
      out.write("<script language=\"javascript\">\r\n");
      out.write("\tfunction view(temp) {\r\n");
      out.write("\t\tif(temp.length > 0) {\r\n");
      out.write("\t\t\turl =\"http://localhost:8080/jsp/chap12/upload/\" + temp;\r\n");
      out.write("\t\t\twindow.open(url, \"win\", \"height=350, width=450,toolbar=0,menubar=0,scrollbars=1,resizable=1,status=0\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<p align=center>\r\n");
      out.write("\t<font color=#0000ff face=굴림 size=3>\r\n");
      out.write("\t\t<strong>쇼핑하기</strong>\r\n");
      out.write("\t</font>\r\n");
      out.write("</p>\r\n");
      out.write("\r\n");
      out.write("<form method=post name=search action=\"shop_list.jsp\">\r\n");
      out.write("<table border=0 width=95%>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<th align=right>\r\n");
      out.write("\t\t\t<font size=-1>.상품명으로 찾기</font>\r\n");
      out.write("\t\t\t<input type=text name=pname>\r\n");
      out.write("\t\t\t<input type=submit value=\"검색\">\r\n");
      out.write("\t\t</th>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<th>\r\n");
      out.write("\t\t\t<font size=-1>\r\n");
      out.write("\t\t\t\t[<a href=\"main.html\">메인으로</a>]\r\n");
      out.write("\t\t\t\t<a href=\"shop_list.jsp\">전체</a>\r\n");
      out.write("\t\t\t\t<a href=\"shop_list.jsp?cat=11\">가구</a>\r\n");
      out.write("\t\t\t\t<a href=\"shop_list.jsp?cat=22\">전기/전자</a>\r\n");
      out.write("\t\t\t\t<a href=\"shop_list.jsp?cat=33\">부엌용품</a>\r\n");
      out.write("\t\t\t\t<a href=\"shop_list.jsp?cat=44\">의류</a>\r\n");
      out.write("\t\t\t\t<a href=\"shop_list.jsp?cat=55\">보석 및 악세사리</a>\r\n");
      out.write("\t\t\t\t<a href=\"shop_list.jsp?cat=66\">헬스 기구</a>\r\n");
      out.write("\t\t\t\t<a href=\"shop_list.jsp?cat=77\">컴퓨터 관련</a>\r\n");
      out.write("\t\t\t\t<a href=\"shop_list.jsp?cat=88\">기구</a>\r\n");
      out.write("\t\t\t</font>\r\n");
      out.write("\t\t</th>\r\n");
      out.write("\t</tr>\r\n");
      out.write("</table>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("<center>\r\n");
      out.write("<table width=95% sthle=\"font-size:10pt\">\r\n");

String cond="";
String ca="";
String pn="";

if(request.getParameter("cat")!=null) {
	if(!(request.getParameter("cat").equals(""))){
		ca=request.getParameter("cat");
		cond = " where category ='"+ ca+"'";
	}
}

if(request.getParameter("pname") != null) {
	if(!(request.getParameter("pname").equals(""))){
		pn=request.getParameter("pname");
		cond = " where pname like '%" + pn+"%'";
	}
}


Vector pname = new Vector();
Vector sname = new Vector();
Vector keyid = new Vector();
Vector price = new Vector();
Vector dprice = new Vector();
Vector stock = new Vector();
Vector small = new Vector();
Vector large = new Vector();
Vector description = new Vector();

String url = "http://localhost:8080/jsp/chap12/upload/";

NumberFormat nf = NumberFormat.getInstance();

int stocki;
String pricestr=null;
String dpricestr=null;
String filename="";

int where=1;

if(request.getParameter("go")!=null)
	where = Integer.parseInt(request.getParameter("go"));

int nextpage = where+1;
int priorpage = where-1;
int startrow=0;
int endrow=0;
int maxrows=3;
int totalrows=0;
int totalpages=0;

long id = 0;

Connection con =null;
Statement st=null;
ResultSet rs = null;

try {
	Class.forName("org.gjt.mm.mysql.Driver");
//	Class.forName("oracle.jdbc.driver.OracleDriver");
	
}catch(ClassNotFoundException e){
	out.println(e.getMessage());
}

try {
	con = DriverManager.getConnection("jdbc:mysql://localhost:3306/shop?useUnicode=true&characterEncoding=euckr","root","apmsetup");
	//con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe", "hr", "1234");
} catch(SQLException e) {
	out.println(e);
}

try {
	st = con.createStatement();
	String sql = "select * from product" ;
	sql = sql+ cond + " order by id desc";
	rs= st.executeQuery(sql);
	if(!(rs.next())){
		out.println("상품이 없습니다.");
	} else {
		do{
			keyid.addElement(new Long(rs.getLong("id")));
			pname.addElement(rs.getString("pname"));
			sname.addElement(rs.getString("sname"));
			price.addElement(new Integer(rs.getInt("price")));
			dprice.addElement(new Integer(rs.getString("downprice")));
			stock.addElement(new Integer(rs.getInt("stock")));
			description.addElement(rs.getString("description"));
			small.addElement(rs.getString("small"));
			large.addElement(rs.getString("large"));
		}while(rs.next());
	
		totalrows = pname.size();
		totalpages = (totalrows-1)/maxrows +1;
		
		startrow = (where-1)*maxrows;
		endrow = startrow+maxrows-1;
	
		if(endrow >= totalrows)
			endrow=totalrows-1;
		
		for(int j=startrow;j<=endrow;j++) {
			id=((Long)keyid.elementAt(j)).longValue();
			stocki=((Integer)stock.elementAt(j)).intValue();
			filename = url+(String)small.elementAt(j);
			pricestr = nf.format(price.elementAt(j));
			dpricestr=nf.format(dprice.elementAt(j));
			
			
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th rowspan=4>\r\n");
      out.write("\t\t\t\t\t<a href=javaScript:view(\"");
      out.print(large.elementAt(j) );
      out.write("\")><img border=0 width=70 height=70 src=\"");
      out.print(filename );
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t<br>확대\r\n");
      out.write("\t\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t</th>\r\n");
      out.write("\t\t\t\t<td bgcolor=\"#dfedff\">\r\n");
      out.write("\t\t\t\t\t<font face=\"돋움체\" color=black>");
      out.print(pname.elementAt(j) );
      out.write("(코드:");
      out.print(id );
      out.write(")</font>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td bgcolor=#eeeeee>");
      out.print(description.elementAt(j) );
      out.write("</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td align=right>\r\n");
      out.write("\t\t\t\t\t시중가 : <strike>");
      out.print(pricestr );
      out.write("</strike>원&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t판매가 : ");
      out.print(dpricestr );
      out.write("원\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<form method=post name=search action=\"sale.jsp\">\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td align=right>\r\n");
      out.write("\t\t\t\t\t\t제조(공급)원 : ");
      out.print(sname.elementAt(j) );
      out.write("&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t");
	if(stocki>0) { 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t주문수량\r\n");
      out.write("\t\t\t\t\t\t<input type=text name=quantity size=2 value=1>개\r\n");
      out.write("\t\t\t\t\t\t<input type=hidden name=id value=");
      out.print(id );
      out.write(">\r\n");
      out.write("\t\t\t\t\t\t<input type=hidden name=go value=");
      out.print(where );
      out.write(">\r\n");
      out.write("\t\t\t\t\t\t<input type=hidden name=cat value=");
      out.print(ca );
      out.write(">\r\n");
      out.write("\t\t\t\t\t\t<input type=hidden name=pname value=");
      out.print(pn );
      out.write(">\r\n");
      out.write("\t\t\t\t\t\t<input type=submit value=\"바구니에 담기\">\r\n");
      out.write("\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t");
 }else
				out.println("품절"); 
      out.write("\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t");
 		
		}
		rs.close();
	}
	
	
      out.write("\r\n");
      out.write("\t</table>\r\n");
      out.write("\t");

	st.close();
	con.close();
} catch(SQLException e){
	out.println(e);
}
	

if(where< totalpages) { 
      out.write("\r\n");
      out.write("[<a href=\"shop_list.jsp?go=");
      out.print(nextpage );
      out.write("&cat=");
      out.print(ca );
      out.write("&pname=");
      out.print(pn );
      out.write("\">다음</a>]\t\r\n");
      out.write("[<a href=\"shop_list.jsp?go=");
      out.print(totalpages );
      out.write("&cat=");
      out.print(ca );
      out.write("&pname=");
      out.print(pn );
      out.write("\">마지막</a>]\t\r\n");
      out.write("\r\n");
 
}else {
out.println("[다음]");
out.println("[마지막]");


}

out.println(where+"/"+totalpages);
out.println("전체 상품수 : "+ totalrows);

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</center>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
