/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.35
 * Generated at: 2016-06-30 05:40:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.chap11;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.util.*;

public final class databoard_005fsearch_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write(" \r\n");
      out.write(" \r\n");
 request.setCharacterEncoding("euc-kr"); 
      out.write("\r\n");
      out.write("<HTML>\r\n");
      out.write("<HEAD><TITLE>게시판(검색모드)</TITLE>\r\n");
      out.write("</HEAD>\r\n");
      out.write("<BODY>\r\n");
      out.write("<P>\r\n");
      out.write("<P align=center>\r\n");
      out.write("<FONT color=#0000ff face=굴림 size=3>\r\n");
      out.write("<STRONG>자유 게시판(검색모드)</STRONG></FONT></P> \r\n");
      out.write("<FORM method=post name=search action=\"databoard_search.jsp\">\r\n");
      out.write(" <TABLE border=0 width=95%>\r\n");
      out.write("  <TR>\r\n");
      out.write("   <TD align=left width=30% valign=bottom>[<A href=\"databoard_list.jsp\">자유 게시판(일반모드)</A>]</TD>\r\n");
      out.write("   <TD align=right width=70% valign=bottom>\r\n");
      out.write("    <FONT size=2 face=굴림>\r\n");
      out.write("     <SELECT name=stype >\r\n");
 
 String cond = null;
 int what = 1;
 String val=null;  
 if (request.getParameter("stype") != null) {
  what = Integer.parseInt(request.getParameter("stype"));
  val= request.getParameter("sval");
  if (what==1) {
   out.println("<OPTION value=1 selected>이름");
   cond = " where name like '%"+ val+ "%'";
  } else  
   out.println("<OPTION value=1 >이름");
  if (what==2) {
   out.println("<OPTION value=2 selected>제목");
   cond = " where subject like '%"+ val+ "%'";
  } else  
   out.println("<OPTION value=2>제목");
  if (what==3) { 
   out.println("<OPTION value=3 selected>내용");
   cond = " where content  like '%"+ val+ "%'";
  } else  
   out.println("<OPTION value=3>내용");
  if (what==4) {
   out.println("<OPTION value=4 selected>이름/제목");
   cond = " where name  like '%"+ val + "%'";
   cond = cond + " or  subject  like '%"+ val+ "%'";
  } else  
   out.println("<OPTION value=4>이름/제목");
  if (what==5) {
   out.println("<OPTION value=5 selected>이름/내용");
   cond = " where name  like '%"+ val + "%'";
   cond = cond + " or  content  like '%"+ val+ "%'";
  } else  
   out.println("<OPTION value=5>이름/내용");
  if (what==6) {
   out.println("<OPTION value=6 selected>제목/내용");
   cond = " where subject  like '%"+ val + "%'";
   cond = cond + " or  content  like '%"+ val+ "%'";
  } else  
   out.println("<OPTION value=6>제목/내용");
  if (what==7) {
   out.println("<OPTION value=7 selected>이름/제목/내용");
   cond = " where name  like '%"+ val + "%'";
   cond = cond + " or  subject  like '%"+ val+ "%'";
   cond = cond + " or  content  like '%"+ val+ "%'";
  } else  
   out.println("<OPTION value=7>이름/제목/내용");
  if (val.trim().equals(""))
   cond = "";
  
  if (what==8) {
	   out.println("<OPTION value=8 selected>파일이름");
	   cond = " where filename  like '%"+ val + "%'";
	  } else  
	   out.println("<OPTION value=8>파일이름");
}

      out.write("\r\n");
      out.write("     </SELECT>\r\n");
      out.write("\t</FONT>\r\n");
      out.write("    <INPUT type=text name=\"sval\" value=\"");
      out.print(request.getParameter("sval"));
      out.write("\">\r\n");
      out.write("    <INPUT type=submit value=\"검색\">\r\n");
      out.write("   </TD>\r\n");
      out.write("  </TR>\r\n");
      out.write(" </TABLE>\r\n");
      out.write("</FORM>\r\n");
      out.write("<CENTER>\r\n");
      out.write("<TABLE border=0 width=600 cellpadding=4 cellspacing=0>\r\n");
      out.write(" <tr align=\"center\"> \r\n");
      out.write("  <td colspan=\"5\" height=\"1\" bgcolor=\"#1F4F8F\"></td>\r\n");
      out.write(" </tr>\r\n");
      out.write(" <tr align=\"center\" bgcolor=\"#87E8FF\"> \r\n");
      out.write("  <td width=\"42\" bgcolor=\"#DFEDFF\"><font size=\"2\">번호</font></td>\r\n");
      out.write("  <td width=\"340\" bgcolor=\"#DFEDFF\"><font size=\"2\">제목</font></td>\r\n");
      out.write("  <td width=\"84\" bgcolor=\"#DFEDFF\"><font size=\"2\">등록자</font></td>\r\n");
      out.write("  <td width=\"78\" bgcolor=\"#DFEDFF\"><font size=\"2\">날짜</font></td>\r\n");
      out.write("  <td width=\"49\" bgcolor=\"#DFEDFF\"><font size=\"2\">조회</font></td>\r\n");
      out.write(" </tr>\r\n");
      out.write(" <tr align=\"center\"> \r\n");
      out.write("  <td colspan=\"5\" bgcolor=\"#1F4F8F\" height=\"1\"></td>\r\n");
      out.write(" </tr>\r\n");
 
 Vector name=new Vector();
 Vector inputdate=new Vector();
 Vector email=new Vector();
 Vector subject=new Vector();
 Vector rcount=new Vector();
 Vector keyid=new Vector();
 Vector step=new Vector();

 int where=1;

 int totalgroup=0;
 int maxpages=2;
 int startpage=1;
 int endpage=startpage+maxpages-1;
 int wheregroup=1;

 if (request.getParameter("go") != null) {
  where = Integer.parseInt(request.getParameter("go"));
  wheregroup = (where-1)/maxpages + 1;
  startpage=(wheregroup-1) * maxpages+1;  
  endpage=startpage+maxpages-1; 
 } else if (request.getParameter("gogroup") != null) {
  wheregroup = Integer.parseInt(request.getParameter("gogroup"));
  startpage=(wheregroup-1) * maxpages+1;  
  where = startpage ; 
  endpage=startpage+maxpages-1; 
 }
 int nextgroup=wheregroup+1;
 int priorgroup= wheregroup-1;

 int nextpage=where+1;
 int priorpage = where-1;
 int startrow=0;
 int endrow=0;
 int maxrows=5;
 int totalrows=0;
 int totalpages=0;

 int id=0;

 String em=null;
 Connection con= null;
 Statement st =null;
 ResultSet rs =null;
 
 try {
		Class.forName("oracle.jdbc.driver.OracleDriver");
	}catch (ClassNotFoundException e){
		out.println(e.getMessage());
	}

	try {
		con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe", "hr", "1234");
	}catch(SQLException e){
		out.println(e);
	}

 
 try {
  st = con.createStatement();
  String sql = "select * from databoard " + cond;
  sql = sql + " order by id desc" ;
  rs = st.executeQuery(sql);

  if (!(rs.next()))  {
   out.println("해당하는 글이 없습니다");
  } else {
   do {
    keyid.addElement(new Integer(rs.getInt("id")));
    name.addElement(rs.getString("name"));
    email.addElement(rs.getString("email"));
    String idate = rs.getString("inputdate");
    idate = idate.substring(0,8);
    inputdate.addElement(idate);
    subject.addElement(rs.getString("subject"));
    rcount.addElement(new Integer(rs.getInt("readcount")));
    step.addElement(new Integer(rs.getInt("step")));
   }while(rs.next());
   totalrows = name.size();
   totalpages = (totalrows-1)/maxrows +1;
   startrow = (where-1) * maxrows;
   endrow = startrow+maxrows-1  ;
   if (endrow >= totalrows)
    endrow=totalrows-1;
   totalgroup = (totalpages-1)/maxpages +1;
   if (endpage > totalpages) 
    endpage=totalpages;
   for(int j=startrow;j<=endrow;j++) {
    String temp=(String)(email.elementAt(j));
    if ((temp == null) || (temp.equals("")) ) 
     em= (String)name.elementAt(j); 
    else
     em = "<A href=mailto:" + temp + ">" + name.elementAt(j) + "</A>";
    id= totalrows-j;
    if(j%2 == 0){
     out.println("<TR bgcolor='#FFFFFF' onMouseOver=\" bgColor='#DFEDFF'\" onMouseOut=\"bgColor=''\">");	
    } else {
     out.println("<TR bgcolor='#F4F4F4' onMouseOver=\" bgColor='#DFEDFF'\" onMouseOut=\"bgColor='#F4F4F4'\">");
    } 
    out.println("<TD align=center>");
    out.println(id+"</TD>");
    out.println("<TD>");
    int stepi= ((Integer)step.elementAt(j)).intValue();
    if (stepi > 0 ) {
     for(int count=0; count < stepi; count++)
      out.print("&nbsp;&nbsp;");
     }
    String clink = "<A href=databoard_read.jsp?id=" + keyid.elementAt(j) ;
    clink = clink + "&page=" + where + ">" + subject.elementAt(j) + "</A>";
    out.println(clink + "</TD>");
    out.println("<TD align=center>");
    out.println(em+ "</TD>");
    out.println("<TD align=center>");
    out.println(inputdate.elementAt(j)+ "</TD>");
    out.println("<TD align=center>");
    out.println(rcount.elementAt(j)+ "</TD>");
    out.println("</TR>"); 
   }
   rs.close();
  }
  out.println("</TABLE>");
  st.close();
  con.close();
 } catch (java.sql.SQLException e) {
  out.println(e);
 } 
 if (wheregroup > 1) {
  out.print("[<A href=freeboard_search.jsp?gogroup=1"); 
  out.print("&stype="+ what+"&sval=" + val +">처음</A>]");
  out.print("[<A href=freeboard_search.jsp?gogroup="+priorgroup);
  out.print("&stype="+ what+"&sval=" + val +">이전</A>]");
 } else {
  out.println("[처음]") ;
  out.println("[이전]") ;
 }
 if (name.size() !=0) {
  for(int jj=startpage; jj<=endpage; jj++) {
   if (jj==where) 
    out.println("["+jj+"]") ;
   else {
    out.print("[<A href=freeboard_search.jsp?go="+jj);
    out.print("&stype="+ what+"&sval=" + val +">" + jj + "</A>]") ;
   }
  }
 }
 if (wheregroup < totalgroup) {
  out.print("[<A href=freeboard_search.jsp?gogroup="+ nextgroup);
  out.print("&stype="+ what+"&sval=" + val +">다음</A>]");
  out.print("[<A href=freeboard_search.jsp?gogroup="+totalgroup); 
  out.print("&stype="+ what+"&sval=" + val +">마지막</A>]");
 } else {
  out.println("[다음]");
  out.println("[마지막]");
 }
 out.println ("검색된 글 수 :"+totalrows);

      out.write("\r\n");
      out.write("</BODY>\r\n");
      out.write("</HTML>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
